\DOC REAL_RAT_LT_CONV

\TYPE {REAL_RAT_LT_CONV : conv}

\SYNOPSIS
Conversion to prove whether one rational literal of type {:real} is {<}
another.

\DESCRIBE
The call {REAL_RAT_LT_CONV `c1 < c2`} where {c1} and {c2} are rational
literals of type {:real}, returns whichever of {|- c1 < c2 <=> T} or
{|- c1 < c2 <=> F} is true. The literals {c1} and {c2} may be integer
literals ({&n} or {-- &n}), ratios ({&p / &q} or {-- &p / &q}), or decimals
({#DDD.DDDD} or {#DDD.DDDDeNN}).

\FAILURE
Fails if applied to a term that is not the appropriate inequality comparison on
two permitted rational literals of type {:real}.

\EXAMPLE
{
  # REAL_RAT_LT_CONV `#3.1415926 < &355 / &113`;;
  val it : thm = |- #3.1415926 < &355 / &113 <=> T
}

\SEEALSO
REAL_RAT_ABS_CONV, REAL_RAT_ADD_CONV, REAL_RAT_DIV_CONV, REAL_RAT_EQ_CONV,
REAL_RAT_GE_CONV, REAL_RAT_GT_CONV, REAL_RAT_INV_CONV, REAL_RAT_LE_CONV,
REAL_RAT_MAX_CONV, REAL_RAT_MIN_CONV, REAL_RAT_MUL_CONV, REAL_RAT_NEG_CONV,
REAL_RAT_POW_CONV, REAL_RAT_REDUCE_CONV, REAL_RAT_RED_CONV, REAL_RAT_SGN_CONV,
REAL_RAT_SUB_CONV.

\ENDDOC
