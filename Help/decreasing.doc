\DOC decreasing

\TYPE {decreasing : ('a -> 'b) -> 'a -> 'a -> bool}

\SYNOPSIS
When applied to a ``measure'' function {f}, the call {increasing f} returns a 
binary function ordering elements in a call {increasing f x y} by
{f(y) <? f(x)}, where the ordering {<?} is the OCaml polymorphic ordering.

\FAILURE
Never fails unless the measure function does.

\EXAMPLE
{
  # let nums = -5 -- 5;;
  val nums : int list = [-5; -4; -3; -2; -1; 0; 1; 2; 3; 4; 5]
  # sort (decreasing abs) nums;;
  val it : int list = [5; -5; 4; -4; 3; -3; 2; -2; 1; -1; 0]
}

\SEEALSO
<?, increasing, sort.

\ENDDOC
