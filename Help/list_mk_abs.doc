\DOC list_mk_abs

\TYPE {list_mk_abs : term list * term -> term}

\SYNOPSIS
Iteratively constructs abstractions.

\DESCRIBE
{list_mk_abs([`x1`;...;`xn`],`t`)} returns {`\x1 ... xn. t`}.

\FAILURE
Fails with {list_mk_abs} if the terms in the list are not variables.

\EXAMPLE
{
  # list_mk_abs([`m:num`; `n:num`],`m + n + 1`);;
  val it : term = `\m n. m + n + 1`
}

\SEEALSO
dest_abs, mk_abs, strip_abs.

\ENDDOC
