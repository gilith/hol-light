\DOC strip_comb

\TYPE {strip_comb : term -> term * term list}

\SYNOPSIS
Iteratively breaks apart combinations (function applications).

\DESCRIBE
{strip_comb `t t1 ... tn`} returns {(`t`,[`t1`;...;`tn`])}. Note that
{
   strip_comb(list_mk_comb(`t`,[`t1`;...;`tn`]))
}
\noindent will not return {(`t`,[`t1`;...;`tn`])} if {t} is a combination.

\FAILURE
Never fails.

\EXAMPLE
{
  # strip_comb `x /\ y`;;
  val it : term * term list = (`(/\)`, [`x`; `y`])

  # strip_comb `T`;;
  val it : term * term list = (`T`, [])
}

\SEEALSO
dest_comb, list_mk_comb, splitlist, striplist.

\ENDDOC
