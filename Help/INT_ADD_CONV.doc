\DOC INT_ADD_CONV

\TYPE {INT_ADD_CONV : conv}

\SYNOPSIS
Conversion to perform addition on two integer literals of type {:int}.

\DESCRIBE
The call {INT_ADD_CONV `c1 + c2`} where {c1} and {c2} are integer literals
of type {:int}, returns {|- c1 + c2 = d} where {d} is the canonical integer
literal that is equal to {c1 + c2}. The literals {c1} and {c2} may be of the
form {&n} or {-- &n} (with nonzero {n} in the latter case) and the result will
be of the same form.

\FAILURE
Fails if applied to a term that is not the sum of two permitted integer
literals of type {:int}.

\EXAMPLE
{
  # INT_ADD_CONV `-- &17 + &25`;;
  val it : thm = |- -- &17 + &25 = &8
}

\SEEALSO
INT_REDUCE_CONV, REAL_RAT_ADD_CONV.

\ENDDOC
