\DOC INT_ABS_CONV

\TYPE {INT_ABS_CONV : conv}

\SYNOPSIS
Conversion to produce absolute value of an integer literal of type {:int}.

\DESCRIBE
The call {INT_ABS_CONV `abs c`}, where {c} is an integer literal of type
{:int}, returns the theorem {|- abs c = d} where {d} is the canonical integer
literal that is equal to {c}'s absolute value. The literal {c} may be of the
form {&n} or {-- &n} (with nonzero {n} in the latter case) and the result will
be of the same form.

\FAILURE
Fails if applied to a term that is not the negation of one of the permitted
forms of integer literal of type {:int}.

\EXAMPLE
{
  # INT_ABS_CONV `abs(-- &42)`;;
  val it : thm = |- abs (-- &42) = &42
}

\SEEALSO
INT_REDUCE_CONV, REAL_RAT_ABS_CONV.

\ENDDOC
